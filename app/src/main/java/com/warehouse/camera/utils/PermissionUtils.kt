package com.warehouse.camera.utils

import android.Manifest
import android.app.Activity
import android.content.Context
import android.content.Intent
import android.content.pm.PackageManager
import android.net.Uri
import android.os.Build
import android.os.Environment
import android.provider.Settings
import android.util.Log
import androidx.appcompat.app.AlertDialog
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat

object PermissionUtils {
    const val REQUEST_CAMERA_PERMISSION = 100
    const val REQUEST_STORAGE_PERMISSION = 101
    const val REQUEST_MANAGE_STORAGE_PERMISSION = 102
    
    private const val TAG = "PermissionUtils"
    
    fun hasCameraPermission(context: Context): Boolean {
        return ContextCompat.checkSelfPermission(
            context,
            Manifest.permission.CAMERA
        ) == PackageManager.PERMISSION_GRANTED
    }
    
    fun hasStoragePermission(context: Context): Boolean {
        return when {
            Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU -> {
                // Android 13+ - –Ω—É–∂–Ω–æ READ_MEDIA_IMAGES
                ContextCompat.checkSelfPermission(
                    context,
                    Manifest.permission.READ_MEDIA_IMAGES
                ) == PackageManager.PERMISSION_GRANTED
            }
            Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q -> {
                // Android 10-12 - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è, –Ω–æ –æ–Ω–∏ –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ø–æ–ª–Ω–æ–π –º–µ—Ä–µ
                ContextCompat.checkSelfPermission(
                    context,
                    Manifest.permission.READ_EXTERNAL_STORAGE
                ) == PackageManager.PERMISSION_GRANTED
            }
            else -> {
                // Android 9 –∏ –Ω–∏–∂–µ - –ø—Ä–æ–≤–µ—Ä—è–µ–º WRITE_EXTERNAL_STORAGE
                ContextCompat.checkSelfPermission(
                    context,
                    Manifest.permission.WRITE_EXTERNAL_STORAGE
                ) == PackageManager.PERMISSION_GRANTED
            }
        }
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ —Ñ–∞–π–ª–∞–º–∏ (Android 11+)
     */
    fun hasManageStoragePermission(): Boolean {
        return if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
            Environment.isExternalStorageManager()
        } else {
            true // –ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π Android
        }
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
     */
    fun hasAllNecessaryPermissions(context: Context): Boolean {
        val hasCamera = hasCameraPermission(context)
        val hasStorage = hasStoragePermission(context)
        val hasManageStorage = hasManageStoragePermission()
        
        Log.d(TAG, "Permissions check: Camera=$hasCamera, Storage=$hasStorage, ManageStorage=$hasManageStorage")
        
        return hasCamera && hasStorage && (Build.VERSION.SDK_INT < Build.VERSION_CODES.R || hasManageStorage)
    }
    
    fun requestCameraPermission(context: Context) {
        if (context is Activity) {
            ActivityCompat.requestPermissions(
                context,
                arrayOf(Manifest.permission.CAMERA),
                REQUEST_CAMERA_PERMISSION
            )
        } else {
            Log.e(TAG, "Cannot request camera permission - context is not an Activity")
        }
    }
    
    fun requestStoragePermission(context: Context) {
        if (context is Activity) {
            val permissions = when {
                Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU -> {
                    arrayOf(Manifest.permission.READ_MEDIA_IMAGES)
                }
                Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q -> {
                    arrayOf(Manifest.permission.READ_EXTERNAL_STORAGE)
                }
                else -> {
                    arrayOf(
                        Manifest.permission.WRITE_EXTERNAL_STORAGE, 
                        Manifest.permission.READ_EXTERNAL_STORAGE
                    )
                }
            }
            
            ActivityCompat.requestPermissions(
                context,
                permissions,
                REQUEST_STORAGE_PERMISSION
            )
        } else {
            Log.e(TAG, "Cannot request storage permission - context is not an Activity")
        }
    }
    
    /**
     * –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ —Ñ–∞–π–ª–∞–º–∏ (Android 11+)
     */
    fun requestManageStoragePermission(context: Context) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R && context is Activity) {
            if (!Environment.isExternalStorageManager()) {
                showManageStoragePermissionDialog(context)
            }
        }
    }
    
    private fun showManageStoragePermissionDialog(activity: Activity) {
        AlertDialog.Builder(activity)
            .setTitle("–î–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª–∞–º")
            .setMessage("–î–ª—è –Ω–∞–¥–µ–∂–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏.\n\n–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö.")
            .setPositiveButton("–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å") { _, _ ->
                try {
                    val intent = Intent(Settings.ACTION_MANAGE_APP_ALL_FILES_ACCESS_PERMISSION).apply {
                        data = Uri.parse("package:${activity.packageName}")
                    }
                    activity.startActivityForResult(intent, REQUEST_MANAGE_STORAGE_PERMISSION)
                } catch (e: Exception) {
                    Log.e(TAG, "Error opening manage storage settings", e)
                    // Fallback –Ω–∞ –æ–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    val intent = Intent(Settings.ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION)
                    activity.startActivity(intent)
                }
            }
            .setNegativeButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å") { dialog, _ ->
                dialog.dismiss()
                Log.i(TAG, "User declined MANAGE_EXTERNAL_STORAGE permission")
            }
            .show()
    }
    
    fun requestAllPermissions(context: Context) {
        if (context is Activity) {
            val permissions = when {
                Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU -> {
                    arrayOf(
                        Manifest.permission.CAMERA,
                        Manifest.permission.READ_MEDIA_IMAGES
                    )
                }
                Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q -> {
                    arrayOf(
                        Manifest.permission.CAMERA,
                        Manifest.permission.READ_EXTERNAL_STORAGE
                    )
                }
                else -> {
                    arrayOf(
                        Manifest.permission.CAMERA,
                        Manifest.permission.WRITE_EXTERNAL_STORAGE,
                        Manifest.permission.READ_EXTERNAL_STORAGE
                    )
                }
            }
            
            ActivityCompat.requestPermissions(
                context,
                permissions,
                REQUEST_CAMERA_PERMISSION
            )
            
            // –î–ª—è Android 11+ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º MANAGE_EXTERNAL_STORAGE
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
                // –ó–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã —Å–Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏—Å—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
                android.os.Handler(android.os.Looper.getMainLooper()).postDelayed({
                    requestManageStoragePermission(context)
                }, 1000)
            }
        } else {
            Log.e(TAG, "Cannot request permissions - context is not an Activity")
        }
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ—è—Å–Ω–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
     */
    fun shouldShowPermissionRationale(activity: Activity, permission: String): Boolean {
        return ActivityCompat.shouldShowRequestPermissionRationale(activity, permission)
    }
    
    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Å –ø–æ—è—Å–Ω–µ–Ω–∏–µ–º, –∑–∞—á–µ–º –Ω—É–∂–Ω—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
     */
    fun showPermissionRationaleDialog(activity: Activity, onContinue: () -> Unit) {
        AlertDialog.Builder(activity)
            .setTitle("–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è")
            .setMessage("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç:\n\n" +
                    "üì∑ –ö–∞–º–µ—Ä—É - –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤\n" +
                    "üìÅ –§–∞–π–ª—ã - –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ –æ—Ç—á–µ—Ç–æ–≤\n\n" +
                    "–ë–µ–∑ —ç—Ç–∏—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å–º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
            .setPositiveButton("–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å") { _, _ -> onContinue() }
            .setNegativeButton("–û—Ç–º–µ–Ω–∞") { dialog, _ -> dialog.dismiss() }
            .show()
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
     */
    fun getMissingPermissions(context: Context): List<String> {
        val missingPermissions = mutableListOf<String>()
        
        if (!hasCameraPermission(context)) {
            missingPermissions.add("–ö–∞–º–µ—Ä–∞")
        }
        
        if (!hasStoragePermission(context)) {
            missingPermissions.add("–î–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª–∞–º")
        }
        
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R && !hasManageStoragePermission()) {
            missingPermissions.add("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏")
        }
        
        return missingPermissions
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
     */
    fun getPermissionsStatus(context: Context): String {
        return buildString {
            appendLine("=== –°–¢–ê–¢–£–° –†–ê–ó–†–ï–®–ï–ù–ò–ô ===")
            appendLine("Android –≤–µ—Ä—Å–∏—è: ${Build.VERSION.RELEASE} (API ${Build.VERSION.SDK_INT})")
            appendLine("–ö–∞–º–µ—Ä–∞: ${if (hasCameraPermission(context)) "‚úÖ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ" else "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}")
            appendLine("–§–∞–π–ª—ã: ${if (hasStoragePermission(context)) "‚úÖ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ" else "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}")
            
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
                appendLine("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏: ${if (hasManageStoragePermission()) "‚úÖ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ" else "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}")
            }
            
            val missing = getMissingPermissions(context)
            if (missing.isNotEmpty()) {
                appendLine("\n‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: ${missing.joinToString(", ")}")
            } else {
                appendLine("\n‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã")
            }
        }
    }
}
